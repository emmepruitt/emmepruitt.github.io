[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ClassBlog",
    "section": "",
    "text": "marchmadness\n\n\nmachinelearning\n\n\nnorthernkentucky\n\n\n\n\n\n\n\n\n\n\n\nMay 2, 2023\n\n\nEmme Pruitt\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nhuskers\n\n\nbasketball\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nDec 4, 2022\n\n\nEmme Pruitt\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nhuskers\n\n\nbasketball\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 6, 2022\n\n\nEmme Pruitt\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/alexis-markowski-best-big/index.html",
    "href": "posts/alexis-markowski-best-big/index.html",
    "title": "Alexis Markowski is the best big in the B1G",
    "section": "",
    "text": "The question was, how good would she be in college against bigger and more experienced bigs?\nNews flash: she is the best (and the youngest).\n\n\nCode\nlibrary(tidyverse)\nlibrary(wehoop)\nlibrary(gt)\nlibrary(cowplot)\n\nplayerbox <- load_wbb_player_box(\n  seasons = 2022\n) %>% separate(fg, into=c(\"FG\", \"FGA\")) %>%\n  separate(fg3, into=c(\"ThreesMade\", \"ThreesAttempted\")) %>%\n  mutate_at(3:17,as.numeric)\n\nbig <- c(\"Nebraska\", \"Iowa\", \"Nortwestern\", \"Minnesota\", \"Wisconsin\", \"Illinois\", \"Purdue\", \"Indiana\", \"Michigan\", \"Michigan State\", \"Ohio State\", \"Rutgers\", \"Penn State\", \"Maryland\")\n\nbigplayerbox <- playerbox %>%\n  filter(athlete_position_abbreviation == \"C\" | athlete_position_abbreviation == \"F\") %>%\n  filter(team_short_display_name %in% big) %>%\n  group_by(athlete_display_name, team_short_display_name, athlete_position_abbreviation) %>%\n  summarize( \n    minutes = sum(min),\n    start = sum(starter),\n    points = sum(pts),\n    rebounds = sum(reb),\n    blocks = sum(blk),\n    fieldgoal = sum(FG),\n    fieldgoalattempts = sum(FGA),\n    threesmade = sum(ThreesMade),\n    threesattempted = sum(ThreesAttempted)\n    ) %>% \n  mutate(fgpct = fieldgoal/fieldgoalattempts, threepct = threesmade/threesattempted) \n\nalexis <- bigplayerbox %>% \n  filter(athlete_display_name == \"Alexis Markowski\")\n\nbigbig <- bigplayerbox %>% \n  filter(threesattempted > 4) %>% \n  filter(fgpct > 0) %>% \n  rename(Athlete = athlete_display_name, Team= team_short_display_name) %>%\n  select(Athlete, Team, fieldgoalattempts, fgpct, threesattempted, threepct) %>%\n  arrange(desc(fgpct))\n\ncumulativepoints <- playerbox %>% \n  filter(athlete_position_abbreviation == \"C\" | athlete_position_abbreviation == \"F\") %>%\n  filter(team_short_display_name %in% big) %>%\n  arrange(game_date) %>% \n  group_by(athlete_display_name) %>%\n  mutate(TotalPoints = cumsum(pts)) \n\n\nalexiscumulative <- cumulativepoints %>% \n   filter(athlete_display_name == \"Alexis Markowski\")\n\nggplot() + \n  geom_step(data=cumulativepoints, aes(x=game_date, y=TotalPoints, group=athlete_display_name), color=\"gray\") +\n  geom_step(data=alexiscumulative, aes(x=game_date, y=TotalPoints, group=athlete_display_name), color=\"red\", size=1.5) +\n  geom_vline(xintercept=as.Date(\"2022-01-04\"), color=\"dark grey\") + \n  geom_text(aes(x=as.Date(\"2022-01-16\"), y=225, label=\"First career start\"), color=\"black\") +\n  labs(\n    x=\"Date\", \n    y=\"Points per game\", \n    title=\"Where did Markowski start to shine?\", \n    subtitle=\"The cold January weather made Alexis Markowski get hot.\", \n    caption=\"By: Emme Pruitt  |  Source: wehoop: The SportsDataverse's R Package for Women's Basketball Data\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n    )\n\n\n\n\n\nMarkowski was voted USBWA National Freshman of the Week on January 11, 2022 just one week after her standout game against No. 8 Michigan on January 4.\nThe true freshman’s first 20 point game of her career was against the No. 15 overall WNBA draft pick and All American Naz Hillman.\n… After her first career start, it was only up from there.\nBut what about Nebraska? How did Markowski do in comparison to the rest of the Huskers?\n\n\nCode\nnebraska <- playerbox %>%\n  filter(team_short_display_name == \"Nebraska\") %>%\n  group_by(athlete_display_name, team_short_display_name, athlete_position_abbreviation) %>%\n  summarize( \n    minutes = sum(min),\n    start = sum(starter),\n    points = sum(pts),\n    rebounds = sum(reb),\n    blocks = sum(blk),\n    fieldgoal = sum(FG),\n    fieldgoalattempts = sum(FGA),\n    threesmade = sum(ThreesMade),\n    threesattempted = sum(ThreesAttempted)\n    ) %>% \n  mutate(fgpct = fieldgoal/fieldgoalattempts, threepct = threesmade/threesattempted) %>% \n  filter(minutes >= 250)\n\nbar1 <- ggplot() + \n  geom_bar(data=nebraska, aes(x=reorder(athlete_display_name, minutes), weight=minutes), fill=\"grey\") + \n  geom_bar(data=alexis, aes(x=reorder(athlete_display_name, minutes), weight=minutes), fill=\"red\") +\n  coord_flip() + \n  labs(title=\"Nebraska vs. Markowski\", \n       subtitle = \"The 18 year old freshman appears on both lists, beating out senior Bella Cravens.\",  \n       x=\"\", y=\"Total minutes played\", \n       caption = \"\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n    )\n\n\nbar2 <- ggplot() + \n  geom_bar(data=nebraska, aes(x=reorder(athlete_display_name, start), weight=start), fill=\"grey\") + \n  geom_bar(data=alexis, aes(x=reorder(athlete_display_name, start), weight=start), fill=\"red\") +\n  coord_flip()+ \n  labs(title = \"\", \n       subtitle= \"\", \n       x=\"\", y=\"Number of starts in the 2021-2022 season\",  \n       caption=\"\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n    )\n\n\nbar3 <- ggplot() + \n  geom_bar(data=nebraska, aes(x=reorder(athlete_display_name, rebounds), weight=rebounds), fill=\"grey\") + \n  geom_bar(data=alexis, aes(x=reorder(athlete_display_name, rebounds), weight=rebounds), fill=\"red\") +\n  coord_flip()+ \n  labs(title = \"\", \n       subtitle= \"\", \n       x=\"\", y=\"Total rebounds\",  \n       caption=\"\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n    )\n\n\nbar4 <- ggplot() + \n  geom_bar(data=nebraska, aes(x=reorder(athlete_display_name, blocks), weight=blocks), fill=\"grey\") + \n  geom_bar(data=alexis, aes(x=reorder(athlete_display_name, blocks), weight=blocks), fill=\"red\") +\n  coord_flip()+ \n  labs(title = \"\", \n       subtitle= \"\", \n       x=\"\", y=\"Total blocks\",  \n       caption=\"Source: wehoop: The SportsDataverse's R Package for Women's Basketball Data | By Emme Pruitt\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n    )\n\nplot_grid(bar1, bar2, bar3, bar4) \n\n\n\n\n\nMarkowski led the Huskers in rebounds, was second in scoring, and was the new starter in the paint for Nebraska.\nNow we have seen what Alexis Markowski has done for Nebraska, but what about compared to every forward and center in the Big Ten?\n\n\nCode\nbigbig %>% \n  ungroup() %>% \n  arrange(desc(threepct)) %>% \n  gt() %>% \n  cols_label(\n    fgpct = \"Shooting %\",\n    threepct = \"Three pt %\",\n    fieldgoalattempts = \"Shot attempts\",\n    threesattempted = \"3 pt attempts\"\n  )%>%\n  tab_header(\n    title = \"Alexis Markowski has more than just the green light from 3.\",\n    subtitle = \"The sophomore center is at the top of a tough conference where it matters most.\"\n  ) %>% tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %>% tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  )%>%\n  tab_source_note(\n    source_note = md(\"**By:** Emme Pruitt  |  **Source:** wehoop: The SportsDataverse's R Package for Women's Basketball Data\")\n  )%>%\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=12)\n     )\n   ) %>%\n  opt_row_striping() %>% \n  opt_table_lines(\"none\")%>%\n    fmt_percent(\n    columns = c(fgpct, threepct),\n    decimals = 1\n  )%>%\n  tab_style(\n    style = list(\n      cell_fill(color = \"red\"),\n      cell_text(color = \"white\")\n      ),\n    locations = cells_body(\n      rows = Athlete == \"Alexis Markowski\")\n  )\n\n\n\n\n\n\n  \n    \n      Alexis Markowski has more than just the green light from 3.\n    \n    \n      The sophomore center is at the top of a tough conference where it matters most.\n    \n  \n  \n    \n      Athlete\n      Team\n      Shot attempts\n      Shooting %\n      3 pt attempts\n      Three pt %\n    \n  \n  \n    Alexis Markowski\nNebraska\n297\n49.2%\n42\n50.0%\n    Kendall Coley\nNebraska\n49\n44.9%\n22\n40.9%\n    Mackenzie Holmes\nIndiana\n260\n60.0%\n15\n40.0%\n    Isabelle Bourne\nNebraska\n295\n51.5%\n70\n37.1%\n    Annika Stewart\nNebraska\n114\n46.5%\n64\n34.4%\n    Aleksa Gulbe\nIndiana\n320\n42.2%\n105\n34.3%\n    Chloe Bibby\nMaryland\n327\n42.5%\n144\n34.0%\n    Anna Camden\nPenn State\n176\n38.6%\n88\n33.0%\n    Mimi Collins\nMaryland\n250\n41.2%\n43\n32.6%\n    Solape Amusan\nIllinois\n27\n33.3%\n23\n30.4%\n    Gabby Hutcherson\nOhio State\n59\n39.0%\n30\n30.0%\n    Rebeka Mikulasikova\nOhio State\n268\n45.9%\n73\n28.8%\n    Erin Hedman\nMinnesota\n7\n28.6%\n7\n28.6%\n    Emily Kiser\nMichigan\n257\n44.4%\n44\n22.7%\n    Kadiatou Sissoko\nMinnesota\n328\n41.5%\n28\n21.4%\n    Tara Stauffacher\nWisconsin\n70\n31.4%\n42\n21.4%\n    Tanaya Beacham\nOhio State\n185\n52.4%\n11\n18.2%\n    Angel Reese\nMaryland\n414\n50.0%\n11\n18.2%\n    Bella Cravens\nNebraska\n134\n52.2%\n6\n16.7%\n    Naz Hillmon\nMichigan\n429\n57.3%\n5\n0.0%\n    Kendall Bostic\nIllinois\n164\n49.4%\n22\n0.0%\n  \n  \n    \n      By: Emme Pruitt  |  Source: wehoop: The SportsDataverse's R Package for Women's Basketball Data\n    \n  \n  \n\n\n\n\nThe conference leader in three point percentage and the Nebraska freshman record for threes. Alexis Markowski shot 10 percent better from three than every other forward and center in the Big Ten Conference. Impressive to say the least.\nShooting 50 percent from behind the arc as a guard is incredible. The average from three is 33.3 percent. Shooting 50 percent as a center is incredible.\nTo answer my own question: There is no doubt that Alexis Markowski was the best in the 2021-2022 season.\nLeading her team in rebounds, leading the league in three point percentage, and dominating against house hold names, Markowski was voted Big Ten Freshman of the year, and recieved eight Big Ten Freshman of the Week awards.\nThis year, the stakes are high for Alexis. The reigning Big Ten Freshman of the Year is on the pursuit for Big Ten Player of the year, and even Naismith Player of the Year.\nThe scariest part for the Big Ten and anyone in Alexis Markowski’s way is that she has three. seasons. left."
  },
  {
    "objectID": "posts/which-huskerwbb-team-best-team/index.html",
    "href": "posts/which-huskerwbb-team-best-team/index.html",
    "title": "What Nebraska women’s basketball team has been the best in the last decade?",
    "section": "",
    "text": "The 24-9 finish by Amy William’s team is the best finish by her staff at Nebraska since her hire in 2016, beating 4 teams that appeared in the Sweet Sixteen.\nIs the 2021-2022 season statistically the best for Amy Williams in her time at Nebraska?\nLet’s take a look at the data and compare her six seasons at Nebraska to some other big ten schools.\n\n\nCode\nlibrary(tidyverse)\nlibrary(wehoop)\n\nteambox <- load_wbb_team_box( seasons = 2022:2016) %>% \n  separate(field_goals_made_field_goals_attempted, into=c(\"FG\", \"FGA\")) %>%\n  separate(three_point_field_goals_made_three_point_field_goals_attempted, into=c(\"ThreesMade\", \"ThreesAttempted\")) %>%\n  separate(free_throws_made_free_throws_attempted, into=c(\"FreeThrowsMade\", \"FreeThrowsAttempted\")) %>% \n  mutate_at(12:35, as.numeric) %>% \n  group_by(team_short_display_name, season) %>% \n    summarize(\n    FG = sum(FG),\n    FGA = sum(FGA),\n    Threes = sum(ThreesMade),\n    ThreeAttempts = sum(ThreesAttempted),\n    FTmakes = sum(FreeThrowsMade),\n    FTattempts = sum(FreeThrowsAttempted),\n    Rebounds = sum(total_rebounds),\n    Oboards = sum(offensive_rebounds),\n    Dboards = sum(defensive_rebounds),\n    TeamBoards = sum(team_rebounds),\n    Assists = sum(assists),\n    Steals = sum(steals),\n    Blocks = sum(blocks),\n    TO = sum(turnovers),\n    TeamTO = sum(team_turnovers),\n    Fouls = sum(fouls)\n    ) %>% \n   mutate(FGPCT = FG/FGA, ThreePCT = Threes/ThreeAttempts) \n\nbig <- c(\"Nebraska\", \"Iowa\", \"Nortwestern\", \"Minnesota\", \"Wisconsin\", \"Illinois\", \"Purdue\", \"Indiana\", \"Michigan\", \"Michigan State\", \"Ohio State\", \"Rutgers\", \"Penn State\", \"Maryland\")\n\nbigteambox <- teambox %>%  \nfilter(team_short_display_name %in% big) %>%\n  group_by(team_short_display_name) \n\nnebraska <- bigteambox %>% \n   filter(team_short_display_name == \"Nebraska\")\n\nillinois <- bigteambox %>% \n   filter(team_short_display_name == \"Illinois\")\n\nwisconsin <- bigteambox %>% \n   filter(team_short_display_name == \"Wisconsin\")\n\nmaryland <- bigteambox %>% \n   filter(team_short_display_name == \"Maryland\")\n\niowa <- bigteambox %>% \n   filter(team_short_display_name == \"Iowa\")\n\nrutgers <- bigteambox %>% \n   filter(team_short_display_name == \"Rutgers\")\n\nminnesota <- bigteambox %>% \n   filter(team_short_display_name == \"Minnesota\")\n\nindiana <- bigteambox %>% \n   filter(team_short_display_name == \"Indiana\")\n\nohiost <- bigteambox %>% \n   filter(team_short_display_name == \"Ohio State\")\n\nmichigan <- bigteambox %>% \n   filter(team_short_display_name == \"Michigan\")\n\nmichiganst <- bigteambox %>% \n   filter(team_short_display_name == \"Michigan State\")\n\npennst <- bigteambox %>% \n   filter(team_short_display_name == \"Penn State\")\n\npurdue <- bigteambox %>% \n   filter(team_short_display_name == \"Purdue\")\nnw <- bigteambox %>% \n   filter(team_short_display_name == \"Northwestern\")\n\naverage <- bigteambox %>% group_by(season) %>% summarise(mean_shooting=mean(FGPCT))\n\nggplot() + \n  geom_line(data=nebraska, aes(x=season, y=FGPCT), color=\"red\") +\n  geom_line(data=illinois, aes(x=season, y=FGPCT), color=\"grey\") +\n  geom_line(data=iowa, aes(x=season, y=FGPCT), color=\"yellow\") +\n  geom_line(data=indiana, aes(x=season, y=FGPCT), color=\"grey\") +\n  geom_line(data=purdue, aes(x=season, y=FGPCT), color=\"grey\") +\n  geom_line(data=wisconsin, aes(x=season, y=FGPCT), color=\"grey\") +\n  geom_line(data=michigan, aes(x=season, y=FGPCT), color=\"grey\") +\n  geom_line(data=michiganst, aes(x=season, y=FGPCT), color=\"grey\") +\n  geom_line(data=ohiost, aes(x=season, y=FGPCT), color=\"grey\") +\n  geom_line(data=pennst, aes(x=season, y=FGPCT), color=\"grey\") +\n  geom_line(data=minnesota, aes(x=season, y=FGPCT), color=\"grey\") +\n  geom_line(data=maryland, aes(x=season, y=FGPCT), color=\"grey\") +\n  geom_line(data=nw, aes(x=season, y=FGPCT), color=\"grey\") +  \n  geom_line(data=rutgers, aes(x=season, y=FGPCT), color=\"grey\") +\n  geom_line(data=average, aes(x=season, y=mean_shooting), color=\"black\") + \n  geom_text(aes(x=2019, y=0.44, label=\"Average Team FGPCT\"), color=\"black\") +\n  geom_text(aes(x=2021, y=0.52, label=\"Iowa\"), color=\"black\") +\n  geom_text(aes(x=2017, y=0.38, label=\"NU\"), color=\"red\") +\n  labs(\n    x=\"Date\", \n    y=\"Field Goal %\", \n    title=\"When has Nebraska shot it's best?\", \n    subtitle=\"The Huskers have been stagnant since 2016\", \n    caption=\"By: Emme Pruitt  |  Source: wehoop: The SportsDataverse's R Package for Women's Basketball Data\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n    )\n\n\n\n\n\nThe Huskers field goal percentage in the last six seasons have all been below the big ten average.\nFor comparison, (and rivalry reasons) Iowa has led the big ten in this category. This could be credited to Iowa’s fifth year center Monika Czinano, who led the Big Ten Conference in shooting percentage.\nNebraska’s stellar shooting from beyond the arc last year was a hard one to stop for most teams.\nHow many assists and turnovers was Nebraska counting up each season? Could a lack of assists account to the field goal percentage?\n\n\nCode\nggplot() +\n  geom_point(data=bigteambox, aes(x=Assists, y=TO)) +\n  geom_point(data=nebraska, aes(x=Assists, y=TO), color=\"red\") +\n  geom_text(aes(x=550, y=463, label=\"'21-22\"), color=\"red\") +\n  geom_text(aes(x=447, y=525, label=\"'17-18\"), color=\"red\") +\n  geom_text(aes(x=374, y=360, label=\"'20-21\"), color=\"red\") +\n  geom_text(aes(x=589, y=330, label=\"Maryland '21-22\"), color=\"black\") +\n  labs(\n    x=\"Assists\", \n    y=\"Turnovers\", \n    title=\"Which team had the best assist/turnover ratio?\", \n    subtitle=\"William's 2021-2022 team had the most assists in her 6th season at Nebraska.\", \n    caption=\"By: Emme Pruitt  |  Source: wehoop: The SportsDataverse's R Package for Women's Basketball Data\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n    )\n\n\n\n\n\nThe scatterplot above details on the X axis assists and the Y axis turnovers. With Nebraska in red, they are definitely not a top team in turnovers. The 2021-2022 Nebraska team has the lowest number of assists and turnovers recorded. However, taking in account the limited number of games in the covid season, this might not be entirely true.\n\n\nCode\nggplot() + \n  geom_step(data=bigteambox, aes(x=season, y=Oboards, group=team_short_display_name), color=\"gray\") +\n  geom_step(data=nebraska, aes(x=season, y=Oboards, group=team_short_display_name), color=\"red\", size=1.0) +\n  geom_step(data=maryland, aes(x=season, y=Oboards, group=team_short_display_name), color=\"black\") +\n  geom_text(aes(x=2016, y=340, label=\"Nebraska\"), color=\"red\") +\n  geom_text(aes(x=2016, y=540, label=\"Maryland\"), color=\"black\") +\n  labs(\n    x=\"Season\", \n    y=\"Offensive Rebounds\", \n    title=\"Did the addition of Markowski drastically increase NU's boards?\", \n    subtitle=\"The Huskers 2021-2022 offensive rebounding skyrocketed with the addition of the Big Ten Freshman of the Year.\", \n    caption=\"By: Emme Pruitt  |  Source: wehoop: The SportsDataverse's R Package for Women's Basketball Data\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n    )\n\n\n\n\n\nNebraska had the second most offensive rebounds in the Big Ten Conference last year, right behind Maryland.\nThe Huskers totaled 433 offensive rebounds in the 2021-2022 season, which is the most OBoards in William’s time at Nebraska. The second most offensive rebounds in Coach William’s time here is 404, in the years 2018-2019.\nBy looking at all of the data presented here, it is pretty clear to see that the 2021-2022 Husker squad is the best one that Amy Williams has had in her six years at Nebraska. Almost at the top of the conference in some cases (despite the FG percentage.)\nThe women’s team has been off to a bit shaky start this year, but only time will tell how the 2021-2022 season data compares to the 2022-2023 data. There is still a lot of basketball left to play.\nBut as of this moment, last years squad was the best Amy has had in a while."
  },
  {
    "objectID": "posts/march-madness-gone-wrong/index.html",
    "href": "posts/march-madness-gone-wrong/index.html",
    "title": "The Northern Kentucky Cinderella Story that Never Was",
    "section": "",
    "text": "Is it the star players, the coaches, the fans?\nAfter looking into and testing a lot of different metrics, So I chose a few key metrics to build my NCAA Tournament model.\nI focused on bench points, defensive rebounds, and fouls committed because these factors can make or break a team’s success.\nAfter experimenting with different machine learning models, I settled on Light GBM for its speed and accuracy…\nAnd while my bracket may not have panned out (thanks, Northern Kentucky), I learned a lot about the unpredictable nature of March Madness and the power of data-driven decision-making.\nLet’s take a look at bench points and how this underutilized metric can win basketball games.\n\n\nCode\nlibrary(tidyverse)\nlibrary(hoopR)\nlibrary(zoo)\nlibrary(tidymodels)\nlibrary(bonsai)\nset.seed(123)\n\nteamgames <- load_mbb_team_box(seasons = 2015:2023) %>% filter(game_date < as.Date(\"2023-03-14\"))\n\nplayers <- load_mbb_player_box(2015:2023) %>% filter(game_date < as.Date(\"2023-03-14\"))\n\nteamstats <- teamgames %>% \n  mutate(\n    possessions = field_goals_attempted - offensive_rebounds + turnovers + (.475 * free_throws_attempted),\n    ppp = team_score/possessions\n  )\n\nbenchpoints <- players %>%\n  filter(starter == FALSE) %>%\n  group_by(game_date, team_short_display_name) %>%\n  summarize(\n    team_bench_points = sum(points, na.rm=TRUE)\n  )\n\nteamstats <- teamstats %>% inner_join(benchpoints)\n\nrollingteamstats <- teamstats %>% \n  group_by(team_short_display_name, season) %>%\n  arrange(game_date) %>%\n  mutate(\n    team_score = ((field_goals_made-three_point_field_goals_made) * 2) + (three_point_field_goals_made*3) + free_throws_made,\n    team_rolling_ppp = rollmean(lag(ppp, n=1), k=5, align=\"right\", fill=NA),\n    team_rolling_bench_points = rollmean(lag(team_bench_points, n=1), k=5, align=\"right\", fill=NA),\n    team_rolling_fouls = rollmean(lag(fouls, n=1), k=5, align=\"right\", fill=NA),\n    team_rolling_defensive_rebounds = rollmean(lag(defensive_rebounds, n=1), k=5, align=\"right\", fill=NA)\n    ) %>% \n  ungroup() \n\nteam_side <- rollingteamstats %>%\n  select(\n    game_id,\n    team_id, \n    team_short_display_name, \n    opponent_team_id, \n    game_date, \n    season, \n    team_score, \n    team_rolling_ppp,\n    team_rolling_bench_points,\n    team_rolling_fouls,\n    team_rolling_defensive_rebounds\n    ) \n\nopponent_side <- team_side %>%\n  select(-opponent_team_id) %>% \n  rename(\n    opponent_team_id = team_id,\n    opponent_short_display_name = team_short_display_name,\n    opponent_score = team_score,\n    opponent_rolling_ppp = team_rolling_ppp,\n    opponent_rolling_bench_points = team_rolling_bench_points,\n    opponent_rolling_fouls = team_rolling_fouls,\n    opponent_rolling_defensive_rebounds = team_rolling_defensive_rebounds\n  ) \n\ngames <- team_side %>% inner_join(opponent_side)\n\ngames <- games %>% mutate(\n  team_result = as.factor(case_when(\n    team_score > opponent_score ~ \"W\",\n    opponent_score > team_score ~ \"L\"\n))) \n\nmodelgames <- games %>% \n  select(\n    game_id, \n    game_date, \n    team_short_display_name, \n    opponent_short_display_name, \n    season, \n    team_rolling_ppp, \n    opponent_rolling_ppp, \n    team_rolling_bench_points,\n    opponent_rolling_bench_points,\n    team_rolling_fouls,\n    opponent_rolling_fouls, \n    team_rolling_defensive_rebounds,\n    opponent_rolling_defensive_rebounds,\n    team_result\n    ) %>% \n  na.omit()\n\nlog_split <- initial_split(modelgames, prop = .8)\nlog_train <- training(log_split)\nlog_test <- testing(log_split)\n\nlightgbm_mod <- \n  boost_tree() %>%\n  set_engine(\"lightgbm\") %>%\n  set_mode(mode = \"classification\")\n\nlog_recipe <- \n  recipe(team_result ~ ., data = log_train) %>% \n  update_role(game_id, game_date, team_short_display_name, opponent_short_display_name, season, new_role = \"ID\") %>%\n  step_normalize(all_predictors())\n\n\nlightgbm_workflow <- \n  workflow() %>% \n  add_model(lightgbm_mod) %>% \n  add_recipe(log_recipe)\n\nlightgbm_fit <- \n  lightgbm_workflow %>% \n  fit(data = log_train)\n\nrollingteamstats <- teamstats %>% \n  group_by(team_short_display_name, season) %>%\n  arrange(game_date) %>%\n  mutate(\n    team_rolling_ppp = rollmean(ppp, k=5, align=\"right\", fill=NA),\n    team_rolling_bench_points = rollmean(team_bench_points, k=5, align=\"right\", fill=NA),\n    team_rolling_fouls = rollmean(fouls, k=5, align=\"right\", fill=NA),\n    team_rolling_defensive_rebounds = rollmean(defensive_rebounds, k=5, align=\"right\", fill=NA)\n    ) %>% \n  ungroup() \n\nteam_side <- rollingteamstats %>%\n  select(\n    game_id,\n    team_id, \n    team_short_display_name, \n    opponent_team_id, \n    game_date, \n    season, \n    team_score, \n    team_rolling_ppp,\n    team_rolling_bench_points,\n    team_rolling_fouls,\n    team_rolling_defensive_rebounds\n    ) \n\nopponent_side <- team_side %>%\n  select(-opponent_team_id) %>% \n  rename(\n    opponent_team_id = team_id,\n    opponent_short_display_name = team_short_display_name,\n    opponent_score = team_score,\n    opponent_rolling_ppp = team_rolling_ppp,\n    opponent_rolling_bench_points = team_rolling_bench_points,\n    opponent_rolling_fouls = team_rolling_fouls,\n    opponent_rolling_defensive_rebounds = team_rolling_defensive_rebounds\n  ) \n\ngames <- team_side %>% inner_join(opponent_side)\n\ngames <- games %>% mutate(\n  team_result = as.factor(case_when(\n    team_score > opponent_score ~ \"W\",\n    opponent_score > team_score ~ \"L\"\n))) %>% na.omit()\n\nmodelgames <- games %>% \n  select(\n    game_id, \n    game_date, \n    team_short_display_name, \n    opponent_short_display_name, \n    season, \n    team_rolling_ppp, \n    opponent_rolling_ppp, \n    team_rolling_bench_points,\n    opponent_rolling_bench_points,\n    team_rolling_fouls,\n    opponent_rolling_fouls, \n    team_rolling_defensive_rebounds,\n    opponent_rolling_defensive_rebounds,\n    team_result\n    ) %>% \n  na.omit()\n\nmidwestround1games <- tibble(\n  team_short_display_name=\"Mississippi St\",\n  opponent_short_display_name=\"Pitt\"\n)\n\nmidwestround1games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(midwestround1games)\n\nmidwestround1games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(midwestround1games)\n\nmidwestround1 <- lightgbm_fit %>% \n  predict(new_data = midwestround1games) %>%\n  bind_cols(midwestround1games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround1 <- lightgbm_fit %>% \n  predict(new_data = midwestround1games, type=\"prob\") %>%\n  bind_cols(midwestround1) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\nmidwestround1games <- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_short_display_name=\"N Kentucky\"\n) %>% add_row(\n  team_short_display_name=\"Iowa\",\n  opponent_short_display_name=\"Auburn\"\n) %>% add_row(\n  team_short_display_name=\"Miami\",\n  opponent_short_display_name=\"Drake\"\n) %>% add_row(\n  team_short_display_name=\"Indiana\",\n  opponent_short_display_name=\"Kent State\"\n) %>% add_row(\n  team_short_display_name=\"Iowa State\",\n  opponent_short_display_name=\"Pitt\"\n) %>% add_row(\n  team_short_display_name=\"Xavier\",\n  opponent_short_display_name=\"Kennesaw St\"\n) %>% add_row(\n  team_short_display_name=\"Texas A&M\",\n  opponent_short_display_name=\"Penn State\"\n) %>% add_row(\n  team_short_display_name=\"Texas\",\n  opponent_short_display_name=\"Colgate\"\n)\n\n\nmidwestround1games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(midwestround1games)\n\nmidwestround1games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(midwestround1games)\n\nmidwestround1 <- lightgbm_fit %>% \n  predict(new_data = midwestround1games) %>%\n  bind_cols(midwestround1games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround1 <- lightgbm_fit %>% \n  predict(new_data = midwestround1games, type=\"prob\") %>%\n  bind_cols(midwestround1) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\nmidwestround2games <- tibble(\n  team_short_display_name=\"N Kentucky\",\n  opponent_short_display_name=\"Iowa\"\n) %>% add_row(\n  team_short_display_name=\"Miami\",\n  opponent_short_display_name=\"Indiana\"\n) %>% add_row(\n  team_short_display_name=\"Pitt\",\n  opponent_short_display_name=\"Xavier\"\n) %>% add_row(\n  team_short_display_name=\"Texas A&M\",\n  opponent_short_display_name=\"Texas\"\n) \n\n\nmidwestround2games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(midwestround2games)\n\nmidwestround2games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(midwestround2games)\n\nmidwestround2 <- lightgbm_fit %>% \n  predict(new_data = midwestround2games) %>%\n  bind_cols(midwestround2games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround2 <- lightgbm_fit %>% \n  predict(new_data = midwestround2games, type=\"prob\") %>%\n  bind_cols(midwestround2) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround3games <- tibble(\n  team_short_display_name=\"N Kentucky\",\n  opponent_short_display_name=\"Miami\"\n) %>% add_row(\n  team_short_display_name=\"Pitt\",\n  opponent_short_display_name=\"Texas A&M\"\n) \n\n\nmidwestround3games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(midwestround3games)\n\nmidwestround3games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(midwestround3games)\n\nmidwestround3 <- lightgbm_fit %>% \n  predict(new_data = midwestround3games) %>%\n  bind_cols(midwestround3games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround3 <- lightgbm_fit %>% \n  predict(new_data = midwestround3games, type=\"prob\") %>%\n  bind_cols(midwestround3) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround4games <- tibble(\n  team_short_display_name=\"N Kentucky\",\n  opponent_short_display_name=\"Pitt\"\n) \n\nmidwestround4games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(midwestround4games)\n\nmidwestround4games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(midwestround4games)\n\nmidwestround4 <- lightgbm_fit %>% \n  predict(new_data = midwestround4games) %>%\n  bind_cols(midwestround4games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround4 <- lightgbm_fit %>% \n  predict(new_data = midwestround4games, type=\"prob\") %>%\n  bind_cols(midwestround4) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\nwestround1games <- tibble(\n  team_short_display_name=\"Arizona State\",\n  opponent_short_display_name=\"Nevada\"\n)\n\nwestround1games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(westround1games)\n\nwestround1games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(westround1games)\n\nwestround1 <- lightgbm_fit %>% \n  predict(new_data = westround1games) %>%\n  bind_cols(westround1games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround1 <- lightgbm_fit %>% \n  predict(new_data = westround1games, type=\"prob\") %>%\n  bind_cols(westround1) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\nwestround1games <- tibble(\n  team_short_display_name=\"Kansas\",\n  opponent_short_display_name=\"Howard\"\n) %>% add_row(\n  team_short_display_name=\"Arkansas\",\n  opponent_short_display_name=\"Illinois\"\n) %>% add_row(\n  team_short_display_name=\"Saint Mary's\",\n  opponent_short_display_name=\"VCU\"\n) %>% add_row(\n  team_short_display_name=\"UConn\",\n  opponent_short_display_name=\"Iona\"\n) %>% add_row(\n  team_short_display_name=\"TCU\",\n  opponent_short_display_name=\"Arizona State\"\n) %>% add_row(\n  team_short_display_name=\"Gonzaga\",\n  opponent_short_display_name=\"Grand Canyon\"\n) %>% add_row(\n  team_short_display_name=\"Northwestern\",\n  opponent_short_display_name=\"Boise State\"\n) %>% add_row(\n  team_short_display_name=\"UCLA\",\n  opponent_short_display_name=\"UNC Asheville\"\n)\n\n\nwestround1games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(westround1games)\n\nwestround1games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(westround1games)\n\nwestround1 <- lightgbm_fit %>% \n  predict(new_data = westround1games) %>%\n  bind_cols(westround1games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround1 <- lightgbm_fit %>% \n  predict(new_data = westround1games, type=\"prob\") %>%\n  bind_cols(westround1) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\nwestround2games <- tibble(\n  team_short_display_name=\"Kansas\",\n  opponent_short_display_name=\"Illinois\"\n) %>% add_row(\n  team_short_display_name=\"Saint Mary's\",\n  opponent_short_display_name=\"UConn\"\n) %>% add_row(\n  team_short_display_name=\"Arizona State\",\n  opponent_short_display_name=\"Gonzaga\"\n) %>% add_row(\n  team_short_display_name=\"Boise State\",\n  opponent_short_display_name=\"UCLA\"\n) \n\n\nwestround2games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(westround2games)\n\nwestround2games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(westround2games)\n\nwestround2 <- lightgbm_fit %>% \n  predict(new_data = westround2games) %>%\n  bind_cols(westround2games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround2 <- lightgbm_fit %>% \n  predict(new_data = westround2games, type=\"prob\") %>%\n  bind_cols(westround2) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\nwestround3games <- tibble(\n  team_short_display_name=\"Kansas\",\n  opponent_short_display_name=\"Saint Mary's\"\n) %>% add_row(\n  team_short_display_name=\"Arizona State\",\n  opponent_short_display_name=\"Boise State\"\n) \n\n\nwestround3games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(westround3games)\n\nwestround3games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(westround3games)\n\nwestround3 <- lightgbm_fit %>% \n  predict(new_data = westround3games) %>%\n  bind_cols(westround3games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround3 <- lightgbm_fit %>% \n  predict(new_data = westround3games, type=\"prob\") %>%\n  bind_cols(westround3) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\nwestround4games <- tibble(\n  team_short_display_name=\"Kansas\",\n  opponent_short_display_name=\"Arizona State\"\n) \n\nwestround4games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(westround4games)\n\nwestround4games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(westround4games)\n\nwestround4 <- lightgbm_fit %>% \n  predict(new_data = westround4games) %>%\n  bind_cols(westround4games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround4 <- lightgbm_fit %>% \n  predict(new_data = westround4games, type=\"prob\") %>%\n  bind_cols(westround4) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\nsouthround1games <- tibble(\n  team_short_display_name=\"Texas A&M-CC\",\n  opponent_short_display_name=\"SE Missouri St\"\n)\n\nsouthround1games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(southround1games)\n\nsouthround1games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(southround1games)\n\nsouthround1 <- lightgbm_fit %>% \n  predict(new_data = southround1games) %>%\n  bind_cols(southround1games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround1 <- lightgbm_fit %>% \n  predict(new_data = southround1games, type=\"prob\") %>%\n  bind_cols(southround1) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\nsouthround1games <- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"Texas A&M-CC\"\n) %>% add_row(\n  team_short_display_name=\"Maryland\",\n  opponent_short_display_name=\"West Virginia\"\n) %>% add_row(\n  team_short_display_name=\"San Diego State\",\n  opponent_short_display_name=\"Charleston\"\n) %>% add_row(\n  team_short_display_name=\"Virginia\",\n  opponent_short_display_name=\"Furman\"\n) %>% add_row(\n  team_short_display_name=\"Creighton\",\n  opponent_short_display_name=\"NC State\"\n) %>% add_row(\n  team_short_display_name=\"Baylor\",\n  opponent_short_display_name=\"UCSB\"\n) %>% add_row(\n  team_short_display_name=\"Missouri\",\n  opponent_short_display_name=\"Utah State\"\n) %>% add_row(\n  team_short_display_name=\"Arizona\",\n  opponent_short_display_name=\"Princeton\"\n)\n\n\nsouthround1games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(southround1games)\n\nsouthround1games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(southround1games)\n\nsouthround1 <- lightgbm_fit %>% \n  predict(new_data = southround1games) %>%\n  bind_cols(southround1games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround1 <- lightgbm_fit %>% \n  predict(new_data = southround1games, type=\"prob\") %>%\n  bind_cols(southround1) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\nsouthround2games <- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"Maryland\"\n) %>% add_row(\n  team_short_display_name=\"San Diego State\",\n  opponent_short_display_name=\"Virginia\"\n) %>% add_row(\n  team_short_display_name=\"Creighton\",\n  opponent_short_display_name=\"UCSB\"\n) %>% add_row(\n  team_short_display_name=\"Missouri\",\n  opponent_short_display_name=\"Arizona\"\n) \n\n\nsouthround2games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(southround2games)\n\nsouthround2games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(southround2games)\n\nsouthround2 <- lightgbm_fit %>% \n  predict(new_data = southround2games) %>%\n  bind_cols(southround2games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround2 <- lightgbm_fit %>% \n  predict(new_data = southround2games, type=\"prob\") %>%\n  bind_cols(southround2) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\nsouthround3games <- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"San Diego State\"\n) %>% add_row(\n  team_short_display_name=\"Creighton\",\n  opponent_short_display_name=\"Missouri\"\n) \n\n\nsouthround3games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(southround3games)\n\nsouthround3games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(southround3games)\n\nsouthround3 <- lightgbm_fit %>% \n  predict(new_data = southround3games) %>%\n  bind_cols(southround3games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround3 <- lightgbm_fit %>% \n  predict(new_data = southround3games, type=\"prob\") %>%\n  bind_cols(southround3) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\nsouthround4games <- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"Creighton\"\n) \n\nsouthround4games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(southround4games)\n\nsouthround4games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(southround4games)\n\nsouthround4 <- lightgbm_fit %>% \n  predict(new_data = southround4games) %>%\n  bind_cols(southround4games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround4 <- lightgbm_fit %>% \n  predict(new_data = southround4games, type=\"prob\") %>%\n  bind_cols(southround4) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\neastround1games <- tibble(\n  team_short_display_name=\"Texas Southern\",\n  opponent_short_display_name=\"Fair. Dickinson\"\n)\n\neastround1games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(eastround1games)\n\neastround1games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(eastround1games)\n\neastround1 <- lightgbm_fit %>% \n  predict(new_data = eastround1games) %>%\n  bind_cols(eastround1games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround1 <- lightgbm_fit %>% \n  predict(new_data = eastround1games, type=\"prob\") %>%\n  bind_cols(eastround1) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\neastround1games <- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_short_display_name=\"Texas Southern\"\n) %>% add_row(\n  team_short_display_name=\"Memphis\",\n  opponent_short_display_name=\"FAU\"\n) %>% add_row(\n  team_short_display_name=\"Duke\",\n  opponent_short_display_name=\"Oral Roberts\"\n) %>% add_row(\n  team_short_display_name=\"Tennessee\",\n  opponent_short_display_name=\"Louisiana\"\n) %>% add_row(\n  team_short_display_name=\"Kentucky\",\n  opponent_short_display_name=\"Providence\"\n) %>% add_row(\n  team_short_display_name=\"Kansas State\",\n  opponent_short_display_name=\"Montana State\"\n) %>% add_row(\n  team_short_display_name=\"Michigan State\",\n  opponent_short_display_name=\"USC\"\n) %>% add_row(\n  team_short_display_name=\"Marquette\",\n  opponent_short_display_name=\"Vermont\"\n)\n\n\neastround1games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(eastround1games)\n\neastround1games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(eastround1games)\n\neastround1 <- lightgbm_fit %>% \n  predict(new_data = eastround1games) %>%\n  bind_cols(eastround1games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround1 <- lightgbm_fit %>% \n  predict(new_data = eastround1games, type=\"prob\") %>%\n  bind_cols(eastround1) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\neastround2games <- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_short_display_name=\"Memphis\"\n) %>% add_row(\n  team_short_display_name=\"Duke\",\n  opponent_short_display_name=\"Tennessee\"\n) %>% add_row(\n  team_short_display_name=\"Kentucky\",\n  opponent_short_display_name=\"Kansas State\"\n) %>% add_row(\n  team_short_display_name=\"Michigan State\",\n  opponent_short_display_name=\"Marquette\"\n) \n\n\neastround2games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(eastround2games)\n\neastround2games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(eastround2games)\n\neastround2 <- lightgbm_fit %>% \n  predict(new_data = eastround2games) %>%\n  bind_cols(eastround2games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround2 <- lightgbm_fit %>% \n  predict(new_data = eastround2games, type=\"prob\") %>%\n  bind_cols(eastround2) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\neastround3games <- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_short_display_name=\"Duke\"\n) %>% add_row(\n  team_short_display_name=\"Kentucky\",\n  opponent_short_display_name=\"Michigan State\"\n) \n\n\neastround3games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(eastround3games)\n\neastround3games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(eastround3games)\n\neastround3 <- lightgbm_fit %>% \n  predict(new_data = eastround3games) %>%\n  bind_cols(eastround3games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround3 <- lightgbm_fit %>% \n  predict(new_data = eastround3games, type=\"prob\") %>%\n  bind_cols(eastround3) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\neastround4games <- tibble(\n  team_short_display_name=\"Kentucky\",\n  opponent_short_display_name=\"Purdue\"\n) \n\neastround4games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(eastround4games)\n\neastround4games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(eastround4games)\n\neastround4 <- lightgbm_fit %>% \n  predict(new_data = eastround4games) %>%\n  bind_cols(eastround4games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround4 <- lightgbm_fit %>% \n  predict(new_data = eastround4games, type=\"prob\") %>%\n  bind_cols(eastround4) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\nfinalfourgames <- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"Kentucky\"\n) %>% add_row(\n  team_short_display_name=\"N Kentucky\",\n  opponent_short_display_name=\"Kansas\"\n) \n\n\nfinalfourgames <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(finalfourgames)\n\nfinalfourgames <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(finalfourgames)\n\nfinalfour <- lightgbm_fit %>% \n  predict(new_data = finalfourgames) %>%\n  bind_cols(finalfourgames) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nfinalfour <- lightgbm_fit %>% \n  predict(new_data = finalfourgames, type=\"prob\") %>%\n  bind_cols(finalfour) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\nnattygame <- tibble(\n  team_short_display_name=\"N Kentucky\",\n  opponent_short_display_name=\"Alabama\"\n) \n\n\nnattygame <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(nattygame)\n\nnattygame <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  slice(1) %>% \n  select(-team_result, -starts_with(\"team\")) %>% \n  right_join(nattygame)\n\nnatty <- lightgbm_fit %>% \n  predict(new_data = nattygame) %>%\n  bind_cols(nattygame) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nnatty <- lightgbm_fit %>% \n  predict(new_data = nattygame, type=\"prob\") %>%\n  bind_cols(natty) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\n\nggplot() + \n  geom_point(\n    data=modelgames, aes(x=team_rolling_bench_points, y=opponent_rolling_bench_points, color=team_result)) +\n   labs(\n     y = \"Opponent Bench Points\",\n    x = \"Team Bench Points\",\n     title=\"Does a teams Bench Points matter?\", subtitle=\"Teams with higher bench points tend to win games.\", caption=\"Source: Sports Reference | By Emme Pruitt\"\n    )\n\n\n\n\n\nMy theory going into March Madness, was that having strong depth would help win basketball games and make it harder for an opponent to not only scout a team, but to also defend different lineups and keep track of a large group of personnel.\nNot only does depth play a role in scouting, but in this time of year there is lots of fatigue as well. Teams are playing multiple games in such a short span of time, while also traveling across the country to places they may have never been. For a coach to be able to consistently rotate players and also prevent injury at this time and what is at stake is huge for a team.\nOne last thought of mine was, you never know who is going to go off for 30 points on any given night.\nIf we look at the scatterplot, you can see that if a team allows the opponent more bench points than they have, they are likely to lose. And if a team has more bench points than their opponent, they are likely to win.\nNow let’s take a look at fouls.\n\n\nCode\nggplot() + \n  geom_point(\n    data=modelgames, aes(x=team_rolling_fouls, y=opponent_rolling_fouls, color=team_result)) +\n   labs(\n     y = \"Opponent Fouls\",\n    x = \"Team Fouls\",\n     title=\"Do team fouls matter?\", subtitle=\"Teams with more fouls tend to lose games.\", caption=\"Source: Sports Reference | By Emme Pruitt\"\n    )\n\n\n\n\n\nThe more your team fouls, the more your opponent will get to the free throw line and have some freebie points. Limiting a teams trip to the free throw line or racking up fouls is a great strategy that is proven to win basketball games.\nWhat about defensive rebounds?\n\n\nCode\nggplot() + \n  geom_point(\n    data=modelgames, aes(x=team_rolling_defensive_rebounds, y=opponent_rolling_defensive_rebounds, color=team_result)) +\n   labs(\n     y = \"Opponent Defensive Rebounds\",\n    x = \"Team Defensive Rebounds\",\n     title=\"Do defensive rebounds matter?\", subtitle=\"Teams with more defensive rebounds tend to win games.\", caption=\"Source: Sports Reference | By Emme Pruitt\"\n    )\n\n\n\n\n\nAgain, pretty easy to interpret.\nA team needs to be a good rebounding team, especially securing defensive rebounds so that the opponent does not get any more opportunities in the paint.\nThese three metrics are key to winning basketball games and stopping the opponent from scoring, or getting the opportunity to score .\nSo, how did it work out for me in March?\nLet’s look at the results.\nAttached below are photos of my bracket, predicted from my machine learning model above.\n\n\n\n\n\nI know what you are thinking.\nI should have changed my metrics after seeing that Northern Kentucky was going to beat #1 Houston the the first round of the tournament.\nBut, hear me out… My model was so sure that Northern Kentucky was going all the way. I tried countless times changing out the metrics to see if I could get Northern Kentucky to lose in the first round, and they just would not budge.\nSo I went for it! I was confident that Northern Kentucky’s bench was going to push me all the way to the final four. But I was very wrong. There was a lot that went wrong, and you see it for yourself.\nThere are some positives here. My model did successfully predict #6 Creighton to make it to the Sweet 16. It also predicted a number of smaller upsets including: Pitt over Iowa State, Michigan State over Marquette, and Creighton over Baylor.\nThis years NCAA tournament was one for the history books. If it was any other year, I think that my model and metrics would have taken me to having a pretty successful bracket. When predicting the Big Ten Tournament, I had great results with similar metrics.\nThe NCAA tournament is so unpredictable. But this year I am blaming it on Farleigh Dickinson and their amazing performance, and Northern Kentucky and their lack of."
  }
]